// Code generated by MockGen. DO NOT EDIT.
// Source: go.uber.org/thriftrw/ast (interfaces: Visitor)

package ast

import (
	gomock "github.com/golang/mock/gomock"
)

// MockVisitor is a mock of Visitor interface
type MockVisitor struct {
	ctrl     *gomock.Controller
	recorder *MockVisitorMockRecorder
}

// MockVisitorMockRecorder is the mock recorder for MockVisitor
type MockVisitorMockRecorder struct {
	mock *MockVisitor
}

// NewMockVisitor creates a new mock instance
func NewMockVisitor(ctrl *gomock.Controller) *MockVisitor {
	mock := &MockVisitor{ctrl: ctrl}
	mock.recorder = &MockVisitorMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (_m *MockVisitor) EXPECT() *MockVisitorMockRecorder {
	return _m.recorder
}

// Visit mocks base method
func (_m *MockVisitor) Visit(_param0 Walker, _param1 Node) Visitor {
	ret := _m.ctrl.Call(_m, "Visit", _param0, _param1)
	ret0, _ := ret[0].(Visitor)
	return ret0
}

// Visit indicates an expected call of Visit
func (_mr *MockVisitorMockRecorder) Visit(arg0, arg1 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "Visit", arg0, arg1)
}
