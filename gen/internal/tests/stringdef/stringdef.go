// Code generated by thriftrw v1.31.0. DO NOT EDIT.
// @generated

package stringdef

import (
	stream "go.uber.org/thriftrw/protocol/stream"
	thriftreflect "go.uber.org/thriftrw/thriftreflect"
	wire "go.uber.org/thriftrw/wire"
)

type StringDef string

// StringDefPtr returns a pointer to a StringDef
func (v StringDef) Ptr() *StringDef {
	return &v
}

// ToWire translates StringDef into a Thrift-level intermediate
// representation. This intermediate representation may be serialized
// into bytes using a ThriftRW protocol implementation.
func (v StringDef) ToWire() (wire.Value, error) {
	x := (string)(v)
	return wire.NewValueString(x), error(nil)
}

// String returns a readable string representation of StringDef.
func (v StringDef) String() string {
	x := (string)(v)
	return (string)(x)
}

func (v StringDef) Encode(sw stream.Writer) error {
	x := (string)(v)
	return sw.WriteString(x)
}

// FromWire deserializes StringDef from its Thrift-level
// representation. The Thrift-level representation may be obtained
// from a ThriftRW protocol implementation.
func (v *StringDef) FromWire(w wire.Value) error {
	x, err := w.GetString(), error(nil)
	*v = (StringDef)(x)
	return err
}

// Decode deserializes StringDef directly off the wire.
func (v *StringDef) Decode(sr stream.Reader) error {
	x, err := sr.ReadString()
	*v = (StringDef)(x)
	return err
}

// Equals returns true if this StringDef is equal to the provided
// StringDef.
func (lhs StringDef) Equals(rhs StringDef) bool {
	return ((string)(lhs) == (string)(rhs))
}

// ThriftModule represents the IDL file used to generate this package.
var ThriftModule = &thriftreflect.ThriftModule{
	Name:     "stringdef",
	Package:  "go.uber.org/thriftrw/gen/internal/tests/stringdef",
	FilePath: "stringdef.thrift",
	SHA1:     "313c35c10839a4442eb270df8e6acda528af9293",
	Raw:      rawIDL,
}

const rawIDL = "typedef string StringDef\n"
